üìë Survey Application Backend Design Document
1. Overview

This service enables creation, assignment, and response collection for surveys (audit/project/general).
Key entities:

SurveyTemplate ‚Üí reusable templates with versioned questions.

Survey ‚Üí created survey instances linked to a template version.

SurveyResponse ‚Üí assignee responses per survey.

Stack: Spring Boot + MongoDB

2. Data Model
2.1 SurveyTemplate Collection

Stores reusable templates, versioned for immutability.

{
  "_id": "tpl1-v2",
  "templateId": "tpl1",
  "version": 2,
  "name": "Audit Feedback Template",
  "questions": [
    {
      "questionId": "q1",
      "text": "Did you review the project plan?",
      "type": "RADIO",
      "options": [
        { "id": "1", "text": "Yes" },
        { "id": "2", "text": "No" }
      ]
    },
    {
      "questionId": "q2",
      "text": "Any blockers?",
      "type": "TEXT"
    }
  ],
  "state": "PUBLISHED",         // DRAFT | PUBLISHED
  "availability": "ACTIVE",     // ACTIVE | INACTIVE
  "createdBy": "sjain",
  "createdAt": "2025-10-08T09:00:00Z"
}

2.2 Survey Collection

Represents a created survey instance.

{
  "_id": "6501a1",
  "surveyId": "6501a1",
  "code": "SURV-2025-001",
  "name": "Q4 Audit Survey",
  "type": "PROJECT",                // PROJECT | GENERAL
  "projectCode": "PRJ1001",
  "createdBy": "sjain",
  "templateRef": "tpl1-v2",          // ref to template version
  "status": "OPEN",                  // OPEN | CLOSED
  "deadline": "2025-10-15T00:00:00Z",
  "assignments": [
    { "assignee": "user200", "status": "SUBMITTED", "emailStatus": "SENT" },
    { "assignee": "user201", "status": "PENDING", "emailStatus": "SENT" }
  ],
  "createdAt": "2025-10-08T09:00:00Z",
  "updatedAt": "2025-10-11T12:00:00Z"
}

2.3 SurveyResponse Collection

Stores responses per survey per assignee.

{
  "_id": "resp1",
  "surveyId": "6501a1",
  "assignee": "user200",
  "status": "SUBMITTED",           // DRAFT | SUBMITTED | DISCARDED
  "answers": [
    { "questionId": "q1", "answerOptionIds": ["2"], "answerText": null },
    { "questionId": "q2", "answerOptionIds": [], "answerText": "Blocked by infra team" }
  ],
  "createdAt": "2025-10-08T10:00:00Z",
  "updatedAt": "2025-10-11T11:30:00Z",
  "submittedAt": "2025-10-11T12:00:00Z"
}

3. APIs
3.1 Template APIs
Method	Endpoint	Description
GET	/api/templates	List active templates (latest version)
GET	/api/templates/{id}	Get specific template version
POST	/api/templates	Create new template version
3.2 Survey APIs
Method	Endpoint	Description
POST	/api/surveys	Create survey from template
GET	/api/surveys	List surveys (optional filters)
POST	/api/surveys/search	Paginated search with filters
GET	/api/surveys/{surveyId}	Get survey details (assignments, metadata)
GET	/api/surveys/code/{code}	Get survey by human-readable code
3.3 Assignment / Response APIs
Method	Endpoint	Description
GET	/api/surveys/{surveyId}/assigned	Get survey (for assignee) with prefilled draft/submitted response
POST	/api/surveys/{surveyId}/responses	Save or submit responses (atomic per assignee)
GET	/api/surveys/{surveyId}/responses/{assignee}	Get detailed response for specific assignee (admin/owner)
GET	/api/surveys/{surveyId}/responses/summary	Get aggregated response summary per question
3.4 Notification APIs
Method	Endpoint	Description
POST	/api/surveys/{id}/notify	Trigger email notifications to assignees
4. Backend Logic

Survey Creation

Validate template exists and is PUBLISHED + ACTIVE.

Validate deadline > today.

Insert Survey with assignments (default status = PENDING).

Trigger email notifications.

Survey Assignment Fetch (Assignee)

Validate survey is assigned to current user.

Return metadata + questions + draft/submitted response.

If survey closed/submitted ‚Üí return closed message only.

Survey Response Save/Submit

Save draft responses continuously (autosave).

On SUBMIT:

Validate mandatory questions answered.

Mark assignments[].status = SUBMITTED.

Lock response read-only.

Survey Detail (Admin/Owner)

Fetch survey by surveyId/code.

Join assignments and response summary.

Show per-assignee status.

Response Summary

Aggregation pipeline: group by questionId ‚Üí count answers ‚Üí avg completion time.

Return breakdown for dashboards.

5. Audit & Traceability

createdAt, updatedAt in all collections.

submittedAt in SurveyResponse.

assignments.emailStatus tracks notification success/failure.

Immutable templates ‚Üí each survey references a specific version.

6. Future Enhancements

AI-generated survey summaries.

Response exports (CSV/Excel).

Anonymous surveys (no assignee stored).

Role-based access for admins, owners, assignees.

‚úÖ This doc is enough for your backend team to:

Create Mongo collections

Define DTOs + Entities in Spring Boot

Implement controllers/services

Wire to UI & email service























Ticket 1: Create Survey

Story
As a Project Owner, I should be able to create a survey by selecting a template, project, deadline, and assignees.

Acceptance Criteria (Step-by-Step)

Given I open the ‚ÄúCreate Survey‚Äù link
Then I should see a form with fields:

Survey Name (text input, required)

Project (dropdown populated from projects API, required)

Template (dropdown populated from templates API, required)

Assignees (multi-select searchable field for employees, required)

Deadline (date picker, required, only future dates allowed)

Given I fill in valid inputs
When I click ‚ÄúCreate‚Äù
Then a survey should be created via POST /api/surveys and I should see a success message with survey code.

Given I enter invalid data (e.g. past deadline, empty fields)
When I try to submit
Then I should see inline validation errors and the survey should not be created.

Ticket 2: View Survey (Assignee)

Story
As an Assignee, when I open a survey link, I should see survey details and be able to view/fill my responses dynamically.

Acceptance Criteria (Step-by-Step)

Given I open a survey link (/surveys/{code})
Then I should see:

Header section with Survey Name, Code, Project, Deadline, and Status

Body section with survey questions loaded from template

Given survey is OPEN and my assignment is PENDING or DRAFT
Then I should see a question form:

Radio button group for single-choice questions

Checkboxes for multiple-choice

Text field for short answer

Textarea for long answer

My draft answers should be prefilled if they exist

Given survey is CLOSED OR my status = SUBMITTED
Then I should only see a message:
‚ÄúThank you. Survey is closed or already submitted.‚Äù

Ticket 3: Submit Response

Story
As an Assignee, I should be able to save a draft and finally submit my responses.

Acceptance Criteria (Step-by-Step)

Given I start filling answers
When I change any answer
Then the system should auto-save a draft with status = DRAFT.

Given I have answered all mandatory questions
When I click ‚ÄúSubmit‚Äù
Then my response should be saved with status = SUBMITTED and the form should become read-only.

Given I have already submitted
When I revisit the survey link
Then I should see my submitted answers in read-only mode.

Ticket 4: Email Notification

Story
As an Assignee, I should get an email when I am assigned to a survey.

Acceptance Criteria (Step-by-Step)

Given a survey is created with me as an assignee
When the survey is created successfully
Then I should receive an email containing:

Survey Name and Code

Survey Deadline

Link to open the survey

Given email sending fails
Then the assignment should be marked emailStatus = FAILED in the survey data.

Ticket 5: Survey Dashboard (Owner/Admin)

Story
As an Owner/Admin, I should be able to see a dashboard of all my surveys with progress and stats.

Acceptance Criteria (Step-by-Step)

Given I open the dashboard page
Then I should see a header summary section with:

Total Surveys created

Active Surveys count

Average Completion %

Given I scroll below
Then I should see a grid/table of surveys with columns:

Survey Name

Code

Type (Project/General)

Deadline

Status (OPEN/CLOSED)

Progress (Completed vs Assigned)

Given I click on a survey row
When I select it
Then I should be taken to the Survey Detail page.


















